/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface ThemeMultiChannelSound {
  stereo: string
  surround?: string
}
export interface ThemeMenuSounds {
  cancel: string
  cursor: string
  enter: string
}
export interface ThemeSoundTable {
  /** Cancel or back */
  cancel: string
  /** General Movement */
  cursor: string
  enter: string
  systemOk: string
  systemNegative: string
  menu: ThemeMenuSounds
  coldboot: ThemeMultiChannelSound
  gameboot: ThemeMultiChannelSound
}
export const enum ThemeFeature {
  Background = 'Background',
  Icons = 'Icons',
  Music = 'Music',
  Sound = 'Sound'
}
export interface ThemeTable {
  name: string
  identifier: string
  version: string
  description?: string
  authors: Array<string>
  /**
   * I can't use a HashSet for this, so I need another way to handle a poorly written Theme.toml with a theme feature
   * specified more than once...
   *
   * This does raise an interesting question of “Can one theme provide more than one of an asset type?”
   */
  features: Array<ThemeFeature>
}
export interface ThemeDefinition {
  theme: ThemeTable
}
export declare class ThemeManager {
  constructor(databasePath: string)
  registerThemes(): void
  getThemeIcon(themeName: string, icon: string, responder: (err: Error | null, arg: Buffer) => any): void
}
